//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use super::sea_orm_active_enums::UserTypeEnum;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub email: String,
    pub password: String,
    pub salt: String,
    pub user_type: UserTypeEnum,
    pub name: String,
    pub surname: String,
    pub club_id: Option<i32>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::authn::Entity")]
    Authn,
}

impl Related<super::authn::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Authn.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
