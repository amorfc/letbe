name: "Build, Test and Deploy to Dev Server"

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Any Name Bash Test Step
        shell: bash
        run: |
          echo "HOST: $HOST"
          echo "POSTGRES_USER: $POSTGRES_USER"
          echo "DOCKER_USERNAME: $DOCKER_USERNAME"
          echo "DOCKER_PASSWORD: $DOCKER_PASSWORD"
          echo "LINODE_IP: $LINODE_IP"
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Protoc
        uses: arduino/setup-protoc@v2

      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      - name: Build and push Docker images
        uses: docker/bake-action@v2.3.0
        with:
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
  deploy:
    needs: build
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      - name: Install sshpass
        run: sudo apt-get install sshpass

      - name: Copy docker-compose.yml to linode
        run: sshpass -v -p $LINODE_PASSWORD scp -o StrictHostKeyChecking=no docker-compose.yml root@$LINODE_IP:~

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: $LINODE_IP
          username: root
          password: $LINODE_PASSWORD
          script: |
            cd ~
            docker-compose down
            docker-compose pull
            docker-compose up -d
